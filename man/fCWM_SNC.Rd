% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fCWM_SNC.R
\name{fCWM_SNC}
\alias{fCWM_SNC}
\title{Calculate community weighted means and species niche centroids for 
double constrained correspondence analysis}
\usage{
fCWM_SNC(
  response = NULL,
  dataEnv = NULL,
  dataTraits = NULL,
  formulaEnv = NULL,
  formulaTraits = NULL,
  divide.by.site.totals = TRUE,
  dc_CA_object = NULL,
  minimal_output = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{response}{matrix, data frame of the abundance data 
(dimension \emph{n} x \emph{m}) or object with community weighted means 
from \code{\link{fCWM_SNC}}. See Details for analyses starting from community
weighted means. Rownames of \code{response}, if any, are carried through.}

\item{dataEnv}{matrix or data frame of the row predictors, with rows 
corresponding to those in \code{response}. (dimension \emph{n} x \emph{p}).}

\item{dataTraits}{matrix or data frame of the column predictors, with rows 
corresponding to the columns in \code{response}.
(dimension \emph{m} x \emph{q}).}

\item{formulaEnv}{formula or one-sided formula for the rows (samples) with 
row predictors in \code{dataEnv}. When two-sided, the left hand side of 
the formula is not used. Specify row covariates (if any ) by 
adding \code{+ Condition(covariate-formula)} to \code{formulaEnv} as 
in \code{\link[vegan]{rda}}. The \code{covariate-formula} should not contain 
a \code{~} (tilde). Default: \code{~.}, i.e. all variables in \code{dataEnv} 
are predictor variables.}

\item{formulaTraits}{formula or one-sided formula for the columns (species) 
with colum predictors in \code{dataTraits}. When two-sided, the left hand 
side of the formula is not used. Specify column covariates (if any ) by 
adding \code{+ Condition(covariate-formula)} to \code{formulaTraits} as 
in \code{\link[vegan]{cca}}. The \code{covariate-formula} should not contain 
a \code{~} (tilde). Default: \code{~.}, i.e. all variables in 
\code{dataTraits} are predictor traits.}

\item{divide.by.site.totals}{logical; default \code{TRUE} for closing the 
data by dividing the rows in the \code{response} by their total.}

\item{dc_CA_object}{optional object from an earlier run of this function. 
Useful if the same formula for the columns (\code{formulaTraits}), 
\code{dataTraits} and \code{response} are used with a new formula for the 
rows. If set, the data of the previous run is used and the result of its 
first step is taken for the new analysis. The \code{data$Y} element in the 
object can be set to \code{NULL}, which is useful. In the case of non-public 
abundance data and a wish for reproducibility of the analysis use the 
function \code{fCWM_SNC} to create an object for use as \code{response} 
argument in a new call to \code{dc_CA}. From this object, the analysis can 
be reproduced from CWMs (and, for full analysis, SNCs) instead of from 
abundance data.}

\item{minimal_output}{logical. Default \code{TRUE} for use of the return 
value as \code{response} in a call to \code{\link{dc_CA}}.}

\item{verbose}{logical for printing a simple summary (default: TRUE)}
}
\value{
The default returns a list of CWMs, SNCs, weights, \code{formulaTraits} and
a list of data with elements \code{dataEnv} and \code{dataTraits}. When 
\code{minimal_output = FALSE}, many more statistics are given that are 
mainly technical or recomputed when the return value is used as 
\code{response} in a call to \code{\link{dc_CA}}.
}
\description{
Double constained correspondence analysis (dc-CA) can be calculated directly 
from community weighted means (CWMs), with the trait data from which the 
CWMs are calculated, and the environmental data and weights for species 
and sites (the abundance totals for species and sites). Statistical testing
at the species level requires also the species niche centroids (SNCs).
The function \code{fCWM_SNC} calculates the CWMs and SNCs from the trait 
and environmental data, respectively, using a formula interface, so as to
allow categorical traits and environmental variables. The resulting object
can be set as the \code{response} argument in \code{\link{dc_CA}} so as to
give the same output as a call to \code{\link{dc_CA}} with the abundance
data as \code{response}, at least up to sign changes of the axes.
}
\details{
The argument \code{formulaTraits} determines which CWMs are calculated.
The CWMs are calculated from the trait data (non-centered, non-standardized).
With trait covariates, the other predictor trait are adjusted for the trait 
covariates by weighted regression, after which the overall weighted mean 
trait is added. This has the advantage that each CWM has the scale of the 
original trait.

The SNCs are calculated analogously from environmental data.

Empty (all zero) rows and columns in \code{response} are removed from 
the \code{response} and the corresponding rows from \code{dataEnv} and 
\code{dataTraits}. Subsequently, any columns with missing values are 
removed from  \code{dataEnv} and \code{dataTraits}. It gives an error 
(object 'name_of_variable' not found), if variables with missing entries
are specified in \code{formulaEnv} and \code{formulaTraits}.

In the current implementation, \code{formulaEnv} and \code{formulaTraits} 
should contain variable names as is, \emph{i.e.} transformations of 
variables in the formulas gives an error ('undefined columns selected') 
when the \code{\link{scores}} function is applied.
}
\examples{
library(douconca)

data("dune_trait_env")
# rownames are carried forward in results
rownames(dune_trait_env$comm) <- dune_trait_env$comm$Sites

divide <- TRUE
mod1 <- dc_CA(formulaEnv = ~ A1 + Moist + Manure + Use + Condition(Mag),
              formulaTraits = ~ SLA + Height + LDMC + Condition(Seedmass) + Lifespan,
              response = dune_trait_env$comm[, -1],  # must delete "Sites"
              dataEnv = dune_trait_env$envir,
              dataTraits = dune_trait_env$traits,
              divide.by.site.totals = divide,
              verbose = TRUE)

CWMSNCa <- fCWM_SNC(formulaEnv = mod1$formulaEnv,
                    formulaTraits = mod1$formulaTraits,
                    response = dune_trait_env$comm[, -1],  # must delete "Sites"
                    dataEnv = dune_trait_env$envir,
                    dataTraits = dune_trait_env$traits,
                    divide.by.site.totals = divide,
                    verbose = FALSE)
names(CWMSNCa)

CWMSNCb <- fCWM_SNC(formulaEnv = mod1$formulaEnv,
                    formulaTraits = mod1$formulaTraits,
                    response = dune_trait_env$comm[, -1],  # must delete "Sites"
                    dataEnv = dune_trait_env$envir,
                    dataTraits = dune_trait_env$traits,
                    divide.by.site.totals = divide,
                    minimal_output = FALSE,
                    verbose = FALSE)
names(CWMSNCb)

mod2 <- dc_CA(formulaEnv = mod1$formulaEnv,
              response = CWMSNCa,  # included dataEnv, dataTraits
              verbose = TRUE)
#Note: the axes of mod2 may have switched sign compared to mod1
# formulaTrait is taken from CWMSNCa
CWMSNCc <- CWMSNCa
CWMSNCc$SNC <- NULL
mod3 <- dc_CA(formulaEnv = mod1$formulaEnv,
              response = CWMSNCc,  # included dataEnv, dataTraits
              verbose = TRUE)

cbind(eig_mod1 = mod1$eigenvalues, eig_mod2 = mod2$eigenvalues, 
      eig_mod3 = mod3$eigenvalues)
mod2$eigenvalues / mod1$eigenvalues

type_of_score <- "sites"
scores(mod2, display = type_of_score) / scores(mod1, display = type_of_score)
type_of_score <- "species"
scores(mod2, display = type_of_score) / scores(mod1, display = type_of_score)
#Note: the axes of mod2 have switched sign compared to mod1

# example of no weights specified;
CWMSNCd <- CWMSNCb
CWMSNCd$weights <- NULL
mod4 <- dc_CA(formulaEnv = mod1$formulaEnv,
              response = CWMSNCd,  # included dataEnv, dataTraits
              verbose = FALSE)
# the analysis is not a real dc-CA:
# the eigenvalues of CWM and SNC analyses differ, see above warning
# the eigenvalues of the CWM analyses are not those of mod1
mod4$eigenvalues / mod1$eigenvalues

CWMSNCe <- CWMSNCd
CWMSNCe$weights <- NULL
# example of weights specified via dataTraits and dataEnv
CWMSNCe$dataTraits <- dune_trait_env$traits
CWMSNCe$dataTraits$weight <- CWMSNCa$weights$columns
dune_trait_env$envir$weight <- CWMSNCa$weights$rows

mod5 <- dc_CA(formulaEnv = mod1$formulaEnv,
              dataEnv = dune_trait_env$envir,
              response = CWMSNCe,  # included dataEnv, dataTraits
              verbose = TRUE)
mod5$eigenvalues / mod1$eigenvalues # mod5 is a proper dc-CA

# A minimal specification with a non-trivial trait model, giving 3 warnings
dune_trait_env$envir$weight <- NULL
CWMSNCf <- list(CWM = as.data.frame(CWMSNCa$CWM),
                weights = list(columns = 100 * mod1$weights$columns),
                dataTraits = dune_trait_env$traits,
                formulaTraits = ~ SLA + Height + LDMC + Condition(Seedmass) + Lifespan)

# Without trait covariates and only traits in dataTraits, 
# formulaTraits can be deleted from the list.
# For the trait model, different environmental predictors can be used
mod6 <- dc_CA(response = CWMSNCf,
              dataEnv = dune_trait_env$envir,
              formulaEnv = ~ Moist,
              verbose = TRUE)

}
\references{
Kleyer, M., Dray, S., Bello, F., Lepš, J., Pakeman, R.J., Strauss, 
B., Thuiller, W. & Lavorel, S. (2012) Assessing species and community 
functional responses to environmental gradients: which multivariate methods?
Journal of Vegetation Science, 23, 805-821.
\doi{10.1111/j.1654-1103.2012.01402.x}

ter Braak, CJF, Šmilauer P, and Dray S. 2018. Algorithms and biplots for
double constrained correspondence analysis.
Environmental and Ecological Statistics, 25(2), 171-197.
\doi{10.1007/s10651-017-0395-x} 

ter Braak C.J.F. and  P. Šmilauer  (2018). Canoco reference manual
and user's guide: software for ordination (version 5.1x).
Microcomputer Power, Ithaca, USA, 536 pp.

Oksanen, J., et al. (2022)
vegan: Community Ecology Package. R package version 2.6-4.
\url{https://CRAN.R-project.org/package=vegan}.
}
\seealso{
\code{\link{plot_dcCA}}, \code{\link{scores.dcca}}, 
\code{\link{print.dcca}} and \code{\link{anova.dcca}}
}
