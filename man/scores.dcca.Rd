% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scores.dcca.R
\name{scores.dcca}
\alias{scores.dcca}
\title{Extract results of a double constrained correspondence analysis 
(dc-CA)}
\usage{
\method{scores}{dcca}(
  x,
  ...,
  choices = 1:2,
  display = "all",
  scaling = "sym",
  which_cor = "in model",
  tidy = FALSE
)
}
\arguments{
\item{x}{object of class \code{"dcca"}, \emph{i.e.} result of
\code{\link{dc_CA}}.}

\item{...}{Other arguments passed to the function (currently ignored).}

\item{choices}{integer vector of which axes to obtain. Default: all dc-CA 
axes.}

\item{display}{a character vector, one or more of \code{c("all", "species",
"sites", "sp", "wa", "lc", "bp", "cor", "ic", "reg", "tval", "cn", 
"lc_traits", "reg_traits","tval_traits", "cor_traits", "ic_traits", 
"bp_traits","cn_traits")}. The most items are as in 
\code{\link[vegan]{scores.cca}}, except \code{"cor"} and \code{"ic"}, for
inter-set and intra-set correlations, respectively, and \code{"tval"} for
the (over-optimistic) t-values of the regression coefficients. The remaining
scores are analogous scores for species and traits.}

\item{scaling}{numeric (1,2 or 3) or character \code{"sites", "species" or
"symmetric"}. Default: "symmetric". Either site- (1) or species- (2) related
scores are scaled by eigenvalues, and the other set of scores is left 
unscaled, or with 3 both are scaled symmetrically by square root of 
eigenvalues. Negative values are treated as the corresponding positive ones
by \code{abs(scaling)}.}

\item{which_cor}{character or list of trait and environmental variables 
names (in this order) in the data frames for which inter-set correlations 
must calculated. Default: a character ("in_model") for all traits and 
variables in the model, including collinear variables and levels.}

\item{tidy}{Return scores that are compatible with \code{ggplot2}: all 
scores are in a single data.frame, score type is identified by factor 
variable \code{score}, the names by variable \code{label}, and species 
weights (in \code{\link{dc_CA}} are in variable \code{weight}. See 
\code{\link[vegan]{scores.cca}}.}
}
\value{
A data frame if \code{tidy = TRUE}, a matrix if a single item is 
asked for and a named list of matrices if more than one item is asked for. 
The following names can be included: \code{c("sites", "constraints_sites",
"centroids", "regression", "t_values", "correlation", 
"intra_set_correlation", "biplot", "species", "constraints_species", 
"regression_traits", "t_values_traits", "correlation_traits",
"intra_set_correlation_traits", "biplot_traits", "centroids_traits")}. Each
matrix has an attribute \code{"meaning"} explaining its meaning. With 
\code{tidy = TRUE}, the resulting data frame has attributes \code{"scaling"} 
and \code{"meaning"}; the latter has two columns: (1) name of score type 
and (2) its meaning, usage and interpretation.

An example of the meaning of scores in scaling \code{"symmetric"} with 
\code{display ="all"}:
\describe{
 \item{sites}{ CMWs of the trait axes (constraints species) in scaling 
 'symmetric' optimal for biplots and, almost so, for inter-site distances.}
 \item{constraints_sites}{linear combination of the environmental predictors 
 and the covariates (making the ordination axes orthogonal to the 
 covariates) in scaling 'symmetric' optimal for biplots and, almost so, 
 for inter-site distances.}
 \item{regression}{mean, sd, VIF, standardized regression coefficients and 
 their optimistic t-ratio in scaling 'symmetric'.}
 \item{t_values}{t-values of the coefficients of the regression of the CWMs 
 of the trait composite on to the environmental variables}
 \item{correlation}{inter set correlation, correlation between environmental 
 variables and the sites scores (CWMs)}
 \item{intra_set_correlation}{intra set correlation, correlation between
 environmental variables and the dc-ca axis (constrained sites scores)}
 \item{biplot}{biplot scores of environmental variables for display with 
 biplot-traits for fourth-corner correlations in scaling 'symmetric'.}
 \item{centroids}{environmental category means of the site scores in scaling 
 'symmetric'  optimal for biplots and, almost so, for inter-environmental
 category distances.}
 \item{species}{SNC on the environmental axes (constraints sites) in scaling 
 'symmetric' optimal for biplots and, almost so, for inter-species 
 distances.}
 \item{constraints_species}{linear combination of the traits and the trait 
 covariates (making the ordination axes orthogonal to the covariates) in 
 scaling 'symmetric' optimal for biplots and, almost so, for inter-species 
 distances.}
 \item{regression_traits}{mean, sd, VIF, standardized regression 
 coefficients and their optimistic t-ratio in scaling 'symmetric'.}
 \item{t_values_traits}{t-values of the coefficients of the regression of the
 SNCs along a dc-CA axis on to the traits}
 \item{correlation_traits}{inter set correlation, correlation between 
 traits and the species scores (SNCs)}
 \item{intra_set_correlation_traits}{intra set correlation, correlation 
 between traits and the dc-ca axis (constrained species scores)}
 \item{biplot_traits}{biplot scores of traits for display with biplot scores
 for fourth-corner correlation in scaling 'symmetric'.}
 \item{centroids_traits}{trait category means of the species scores in 
 scaling 'symmetric' optimal for biplots and, almost so, for inter-trait 
 category distances.}
}

The statements on optimality for distance interpretations are based on the 
\code{scaling} and the relative magnitude of the dc-CA eigenvalues of the 
chosen axes.
}
\description{
This function works very much like the \code{vegan} 
\code{\link[vegan]{scores}} function, in particular 
\code{\link[vegan]{scores.cca}}, with the additional results such as 
regression coefficients and linear combinations of traits 
\code{('regr_traits','lc_traits')}. All scores from CA obey the so called
transition formulas and so do the scores of CCA and dc-CA. The differences
are, for CCA, that the linear combinations of environmental variables (the 
\emph{constrained} site scores) replace the usual (\emph{unconstrained}) 
site scores, and for dc-CA, that the linear combinations of traits (the 
\emph{constrained} species scores) also replace the usual 
(\emph{unconstrained}) species scores.
}
\details{
The function is modeled after \code{\link[vegan]{scores.cca}}.

If you get the error message: 'arg' should be one of "sites", "species", 
"both", then the vegan scores function has been called, instead of the one 
of douconca. The work-around is to use douconca::scores() instead of 
scores() only.

An example of which_cor is: \code{which_cor = list(traits = "SLA", 
env = c("acidity", "humidity"))}
}
\examples{
library(douconca)

data("dune_trait_env")
# rownames are carried forward in results
rownames(dune_trait_env$comm) <- dune_trait_env$comm$Sites

divide <- FALSE # divide by site.totals if TRUE

cat("\n\n\n******* divide.by.site.totals ==", divide, "*******\n\n\n")

mod <- dc_CA(formulaEnv = ~A1 + Moist + Mag + Use + Manure,
             formulaTraits = ~.,
             response = dune_trait_env$comm[, -1],  # must delete "Sites"
             dataEnv = dune_trait_env$envir,
             # delete "Species", "Species_abbr" from traits and
             # use all remaining variables due to formulaTraits = ~. (the default)
             dataTraits = dune_trait_env$traits[, -c(1, 2)],
             divide.by.site.totals = divide,
             verbose = TRUE)

class(mod)
print(mod)

set.seed(123)

anova(mod, by = "axis")

# For more demo on testing, see demo dune_test.r

mod_scores <- scores(mod, display = "all", scaling = "sym")

scores(mod, display = c("cor", "cn", "cor_traits"),
       scaling = "sym", which_cor = list("SLA","in model"))
scores(mod, display = c("cor", "cn", "cor_traits"),
       scaling = "sym", which_cor = list("in model","Manure"))

cat("\n\n**meaning of each set of scores**\n")

print(meaning <- lapply(mod_scores, function(x) attr(x, which = "meaning")))

cat("head of unconstrained site scores, with meaning\n")

print(head(mod_scores$sites))
cat(attr(mod_scores$sites, which = "meaning"), "\n\n")
mod_scores$regression
mod_scores$biplot
mod_scores$centroids

# species related scores
cat("head of unconstrained species scores, with meaning\n")

print(head(mod_scores$species))
cat(attr(mod_scores$species, which = "meaning"), "\n\n")
mod_scores$regression_traits
mod_scores$biplot_traits
mod_scores$centroids_traits

mod_scores_tidy <- scores(mod, display = "all", tidy = TRUE)
print("names of the tidy scores")
print(names(mod_scores_tidy))
cat("\nThe levels of the tidy scores\n")
print(levels(mod_scores_tidy$score))

cat("\nFor illustration: a dc-CA model with a trait covariate\n")
mod2 <- dc_CA(formulaEnv = ~ A1 + Moist + Mag + Use + Manure,
              formulaTraits = ~ SLA + Height + LDMC + Lifespan + Condition(Seedmass),
              response = dune_trait_env$comm[, -1],  # must delete "Sites"
              dataEnv = dune_trait_env$envir,
              dataTraits = dune_trait_env$traits,
              divide.by.site.totals = divide,
              verbose = TRUE)

cat("\nFor illustration: a dc-CA model with both environmental and trait covariates\n")
mod3 <- dc_CA(formulaEnv = ~A1 + Moist + Use + Manure + Condition(Mag),
              formulaTraits = ~ SLA + Height + LDMC + Lifespan + Condition(Seedmass),
              response = dune_trait_env$comm[, -1],  # must delete "Sites"
              dataEnv = dune_trait_env$envir,
              dataTraits = dune_trait_env$traits,
              divide.by.site.totals = divide,
              verbose = TRUE)

cat("\nFor illustration: same model but using mod2 for speed, ", 
    "as the trait model and data did not change\n")
mod3B <- dc_CA(formulaEnv = ~A1 + Moist + Use + Manure + Condition(Mag),
               dataEnv = dune_trait_env$envir,
               dc_CA_object = mod2,
               verbose = TRUE)

cat("\ncheck on equality of mod3 (from data) and mod3B (from a dc_CA_object)\n",
    "the expected difference is in the component 'call'\n ")
print(all.equal(mod3, mod3B)) #  an expected difference, namely in component call

mod_scores <- scores(mod3, display = "all", scaling = "symmetric")

cat("head of unconstrained site scores\n")
print(head(mod_scores$sites))
attr(mod_scores$sites, which = "meaning")
mod_scores$regression

mod_scores$biplot
mod_scores[["biplot"]]
mod_scores$centroids
# #Warning: gives the mod_scores$centroids_traits,
#           as mod_scores[["centroids"]] is NULL.
# Use mod_scores[["centroids"]] instead:
mod_scores[["centroids"]]
# species related scores

cat("head of unconstrained species scores\n")
print(head(mod_scores$species))
attr(mod_scores$species, which = "meaning")
mod_scores$regression_traits
mod_scores$biplot_traits
mod_scores$centroids_traits

mod_scores <- scores(mod3, display = "all", tidy = TRUE)
names(mod_scores)
levels(mod_scores$score)
cat("\nthe tidy scores data frame \n")
str(mod_scores)

# All statistics and scores have been checked against the results
# in Canoco 5.15 (ter Braak & Smilauer, 2018) for all three types of scaling.
}
