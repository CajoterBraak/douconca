% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/anova.wrda.R
\name{anova.wrda}
\alias{anova.wrda}
\title{Permutation Test for weighted redundancy analysis}
\usage{
\method{anova}{wrda}(object, ..., permutations = 999, by = c("omnibus", "axis"))
}
\arguments{
\item{object}{an object from \code{\link{dc_CA}}.}

\item{...}{unused.}

\item{permutations}{a list of control values for the permutations as
returned by the function \code{\link[permute]{how}}, or the number of 
permutations required (default 999), or a permutation matrix where each row
gives the permuted indices.}

\item{by}{character \code{"axis"} which sets the test statistic to the
first eigenvalue of the dc-CA model. Default: \code{NULL} which set the test
statistic to the inertia named \code{constraintsTE} in the inertia element 
of \code{\link{dc_CA}}). This is the environmentally constrained inertia 
explained by the traits (without trait covariates). (which is equal to the 
trait-constrained inertia explained by the environmental predictors 
(without covariates).) The default is quicker computationally as it avoids
computation of an svd of permuted data sets.}
}
\value{
A list with two elements with names \code{table} and \code{eigenvalues}.
The \code{table} is as from \code{\link[vegan]{anova.cca}} and 
\code{eigenvalues} gives the dc-CA eigenvalues.
}
\description{
\code{anova.wrda} performs residual predictor permutation (ter Braak 2022), 
which is robust against differences in the weights in weighted redundancy 
analysis (ter Braak, 2022). The arguments of the function are similar to 
those of \code{\link[vegan]{anova.cca}}, but more restricted.
}
\details{
The algorithm is based on published R-code for residual predictor 
permutation in weighted redundancy analysis (ter Braak, 2022).
}
\examples{
data("dune_trait_env")

# rownames are carried forward in results
rownames(dune_trait_env$comm) <- dune_trait_env$comm$Sites
response <- dune_trait_env$comm[, -1]  # must delete "Sites"

w <- rep(1, 20) 
w[1:10] <- 8 
w[17:20] <- 0.5

object <- wrda(formula = ~ A1 + Moist + Mag + Use + Condition(Manure),
               response = response, 
               data = dune_trait_env$envir, 
               weights = w)
object # Proportions equal to those Canoco 5.15

mod_scores <- scores(object, display = "all")
scores(object, which_cor = c("A1", "Manure"), display = "cor")
anova(object)

# The default is equal weights, which allows checking against vegan
object1 <- wrda(formula = ~ A1 + Moist + Mag + Use + Condition(Manure),
                response = response, 
                data = dune_trait_env$envir)
object1

# compare with vegan::rda
object2 <- 
  vegan::rda(formula = response ~ A1 + Moist + Mag + Use + Condition(Manure), 
             data = dune_trait_env$envir)
object2

object1$CCA$eig / object2$CCA$eig 
object1$tot.chi / object2$tot.chi
object1$CCA$tot.chi / object2$CCA$tot.chi
range(object1$CCA$u / object2$CCA$u)

myconst <- sqrt(object1$Nobs * object2$tot.chi)
veganScores <- 
  scores(object2, 
         choices = seq_len(ncol(object1$site_axes$site_scores$lc_env_scores)),
         display = "lc", scaling = "sites", const = myconst)
range(object1$site_axes$site_scores$lc_env_scores / veganScores) 
}
\references{
ter Braak, C.J.F. (2022) Predictor versus response permutation
for significance testing in weighted regression and redundancy analysis.
Journal of statistical computation and simulation, 92, 2041-2059.
\doi{10.1080/00949655.2021.2019256}
}
